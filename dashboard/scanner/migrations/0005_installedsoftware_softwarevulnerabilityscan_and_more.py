# Generated by Django 4.2 on 2025-05-09 21:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('scanner', '0004_vulnerability_cvss_score_vulnerability_port_info_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='InstalledSoftware',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('version', models.CharField(blank=True, max_length=100, null=True)),
                ('vendor', models.CharField(blank=True, max_length=255, null=True)),
                ('install_date', models.DateField(blank=True, null=True)),
                ('install_location', models.CharField(blank=True, max_length=255, null=True)),
                ('is_vulnerable', models.BooleanField(default=False)),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installed_software', to='scanner.target')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('target', 'name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='SoftwareVulnerabilityScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('total_software', models.IntegerField(default=0)),
                ('vulnerable_software', models.IntegerField(default=0)),
                ('total_vulnerabilities', models.IntegerField(default=0)),
                ('high_vulnerabilities', models.IntegerField(default=0)),
                ('medium_vulnerabilities', models.IntegerField(default=0)),
                ('low_vulnerabilities', models.IntegerField(default=0)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='software_vulnerability_scans', to='scanner.target')),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='SoftwareVulnerability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('unknown', 'Unknown'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('cve_id', models.CharField(blank=True, max_length=20, null=True)),
                ('cvss_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('affected_versions', models.CharField(blank=True, max_length=255, null=True)),
                ('remediation_steps', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('false_positive', 'False Positive')], default='open', max_length=20)),
                ('discovered_at', models.DateTimeField(auto_now_add=True)),
                ('scan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vulnerabilities', to='scanner.softwarevulnerabilityscan')),
                ('software', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vulnerabilities', to='scanner.installedsoftware')),
            ],
            options={
                'ordering': ['-cvss_score', 'severity'],
            },
        ),
    ]
